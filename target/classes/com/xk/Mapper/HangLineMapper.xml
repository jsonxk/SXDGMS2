<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xk.Dao.HangLineMapper">
	<resultMap id="BaseResultMap" type="com.xk.orm.HangLine">
		<id column="HangLineId" property="hanglineid" jdbcType="INTEGER" />
		<result column="UnitId" property="unitid" jdbcType="INTEGER" />
		<result column="Code" property="code" jdbcType="VARCHAR" />
		<result column="HangName" property="hangname" jdbcType="VARCHAR" />
		<result column="Type" property="type" jdbcType="VARCHAR" />
		<result column="CreateTime" property="createtime" jdbcType="TIMESTAMP" />
		<result column="Status" property="status" jdbcType="SMALLINT" />
		<result column="Memo" property="memo" jdbcType="VARCHAR" />
		<result column="unitname" property="unitname" jdbcType="VARCHAR" />
		<result column="statusname" property="statusname" jdbcType="VARCHAR" />
		<result column="typename" property="typename" jdbcType="VARCHAR" />
		<collection property="hangList" ofType="com.xk.orm.HangDetail"
			column="HangLineId" javaType="list">
			<id column="childhangdetailid" property="handdetailid" jdbcType="INTEGER" />
			<result column="childhanglineid" property="hanglineid"
				jdbcType="INTEGER" />
			<result column="childcode" property="code" jdbcType="VARCHAR" />
			<result column="childpoleid" property="poleid" jdbcType="INTEGER" />
			<result column="childprevpoleid" property="prevpoleid"
				jdbcType="INTEGER" />
			<result column="childnextpoleid" property="nextpoleid"
				jdbcType="INTEGER" />
			<result column="childgetmethod" property="getmethod" jdbcType="INTEGER" />
			<result column="childstatus" property="status" jdbcType="INTEGER" />
			<result column="childmemo" property="memo" jdbcType="VARCHAR" />
		</collection>
	</resultMap>
	<!-- 查找搭挂线路具体信息 -->
	<select id="SelectAllHangLine" resultType="com.xk.orm.HangLine"
		parameterType="com.xk.orm.PublicEntity">
		select hangline.*,d1.Item as statusname,d2.Item as typename from
		hangline LEFT JOIN dicitem d1 ON hangline.`Status`=d1.DicItemId LEFT
		JOIN dicitem d2 ON hangline.Type=d2.DicItemId
		<if test="name!=null and name!=''">
			where hangline.Name like "%"#{name}"%"
		</if>
		LIMIT #{offset},#{pageSize}
	</select>
	<!-- 查找搭挂线路名字 -->
	<select id="SelectAllHangLineName" resultType="com.xk.orm.HangLine">
		select * from
		hangline
	</select>
	<select id="SelectAllHangLineCount" parameterType="com.xk.orm.PublicEntity"
		resultType="java.lang.Integer">
		select COUNT(*) as count from hangline where
		<if test="unitid!=0">
			hangline.UnitId=#{unitid}
		</if>
		<if test="name!=null and name!=''">
			and hangline.Name like "%"#{name}"%"
		</if>
	</select>
	<!-- 根据poleid查找搭挂线路信息 -->
	<select id="FaultPoleOfLine" parameterType="java.lang.Integer"
		resultType="com.xk.orm.HangLine">
		SELECT
		hangline.*,unit.UnitName as
		unitname,hangdetail.PoleId from hangline
		LEFT JOIN unit on
		hangline.UnitId=unit.UnitId LEFT JOIN hangdetail ON
		hangdetail.HangLineId=hangline.HangLineId WHERE
		hangdetail.PoleId=#{poleid}
	</select>
	<select id="SelectHangInfoByName" parameterType="java.lang.String"
		resultType="com.xk.orm.HangLine">
		select * from hangline where hangline.hangname like
		"%"#{name}"%"
	</select>
	<select id="SelectHangLineByHangLineId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select d1.Item as statusname,d2.Item as
		typename,Unit.UnitName as unitname,
		hangline.*,h2.HandDetailId as
		childhangdetailid,h2.HangLineId as
		childhanglineid,h2.`Code` as
		childcode,h2.PoleId as
		childpoleid,h2.PrevPoleId as
		childprevpoleid,h2.NextPoleId as
		childnextpoleid,h2.GetMethod as
		childgetmethod,h2.`Status` as
		childstatus,h2.Memo as childmemo from
		hangline LEFT JOIN hangdetail h2 on hangline.HangLineId=h2.HangLineId
		LEFT JOIN dicitem d1 on d1.DicItemId=hangline.`Status` LEFT JOIN
		dicitem d2 ON hangline.Type=d2.DicItemId
		LEFT JOIN unit on
		hangline.UnitId=unit.UnitId
		where hangline.HangLineId=#{hanglineid}
	</select>
	<!-- 根据name查找搭挂线路信息 -->
	<select id="SelectHangLineByName" resultType="com.xk.orm.HangLine">
		select hangline.*
		from hangline where hangline.HangName like "%"#{hangname}"%"
	</select>
	<!-- 根据name查找搭挂线路信息精确查找 -->
	<select id="SelectHangLineByAllName" resultType="com.xk.orm.HangLine">
		select
		hangline.* from hangline where hangline.HangName=#{hangname}
	</select>
	<insert id="insertHangLine" parameterType="com.xk.orm.HangLine"
		useGeneratedKeys="true" keyProperty="hanglineid">
		insert into hangline
		(UnitId,
		HangName,Type,CreateTime,Status,Memo,Code
		)
		values
		(#{unitid,jdbcType=INTEGER},
		#{hangname,jdbcType=VARCHAR},
		#{type,jdbcType=INTEGER},
		#{timeString,jdbcType=TIMESTAMP},#{status,jdbcType=INTEGER},
		#{memo,jdbcType=VARCHAR},
		#{code,jdbcType=VARCHAR})
	</insert>
	<!-- 修改搭挂线路信息 -->
	<update id="ModifyHangLine" parameterType="com.xk.orm.HangLine">
		update hangline
		<set>
			<if test="unitid != null">
				UnitId = #{unitid,jdbcType=INTEGER},
			</if>
			<if test="hangname != null">
				HangName = #{hangname,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				Type = #{type,jdbcType=INTEGER},
			</if>
			<if test="code != null">
				Code = #{type,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				Status = #{status,jdbcType=INTEGER},
			</if>
			<if test="timeString!=null">
				CreateTime=#{timeString},
			</if>
			<if test="memo != null">
				Memo = #{memo,jdbcType=VARCHAR}
			</if>
		</set>
		where HangLineId = #{hanglineid,jdbcType=INTEGER}
	</update>
	<!-- 删除搭挂线路信息 -->
	<delete id="DelHangLine" parameterType="java.lang.Integer">
		delete
		hangline.*,hangdetail.* from hangline,hangdetail where
		hangline.HangLineId=hangdetail.HangLineId and
		hangline.HangLineId=#{hanglineid}
	</delete>
	<insert id="insertSelective" parameterType="com.xk.orm.HangLine">
		insert into hangline
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="hanglineid != null">
				HangLineId,
			</if>
			<if test="unitid != null">
				UnitId,
			</if>
			<if test="hangname != null">
				HangName,
			</if>
			<if test="startpoleid != null">
				StartPoleId,
			</if>
			<if test="endpoleid != null">
				EndPoleId,
			</if>
			<if test="type != null">
				Type,
			</if>
			<if test="applydate != null">
				ApplyDate,
			</if>
			<if test="status != null">
				Status,
			</if>
			<if test="memo != null">
				Memo,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="hanglineid != null">
				#{hanglineid,jdbcType=INTEGER},
			</if>
			<if test="unitid != null">
				#{unitid,jdbcType=INTEGER},
			</if>
			<if test="hangname != null">
				#{hangname,jdbcType=VARCHAR},
			</if>
			<if test="startpoleid != null">
				#{startpoleid,jdbcType=INTEGER},
			</if>
			<if test="endpoleid != null">
				#{endpoleid,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="applydate != null">
				#{applydate,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=SMALLINT},
			</if>
			<if test="memo != null">
				#{memo,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.xk.orm.HangLine">
		update hangline
		<set>
			<if test="unitid != null">
				UnitId = #{unitid,jdbcType=INTEGER},
			</if>
			<if test="hangname != null">
				HangName = #{hangname,jdbcType=VARCHAR},
			</if>
			<if test="startpoleid != null">
				StartPoleId = #{startpoleid,jdbcType=INTEGER},
			</if>
			<if test="endpoleid != null">
				EndPoleId = #{endpoleid,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				Type = #{type,jdbcType=VARCHAR},
			</if>
			<if test="applydate != null">
				ApplyDate = #{applydate,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				Status = #{status,jdbcType=SMALLINT},
			</if>
			<if test="memo != null">
				Memo = #{memo,jdbcType=VARCHAR},
			</if>
		</set>
		where HangLineId = #{hanglineid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.xk.orm.HangLine">
		update hangline
		set UnitId = #{unitid,jdbcType=INTEGER},
		HangName =
		#{hangname,jdbcType=VARCHAR},
		StartPoleId =
		#{startpoleid,jdbcType=INTEGER},
		EndPoleId =
		#{endpoleid,jdbcType=INTEGER},
		Type = #{type,jdbcType=VARCHAR},
		ApplyDate = #{applydate,jdbcType=TIMESTAMP},
		Status =
		#{status,jdbcType=SMALLINT},
		Memo = #{memo,jdbcType=VARCHAR}
		where
		HangLineId = #{hanglineid,jdbcType=INTEGER}
	</update>
</mapper>