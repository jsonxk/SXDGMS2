<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xk.Dao.UserMapper">
	<resultMap id="BaseResultMap" type="com.xk.orm.User">
		<id column="UserId" property="userid" jdbcType="INTEGER" />
		<result column="UnitId" property="unitid" jdbcType="INTEGER" />
		<result column="Name" property="name" jdbcType="VARCHAR" />
		<result column="UserType" property="usertype" jdbcType="INTEGER" />
		<result column="UserName" property="username" jdbcType="VARCHAR" />
		<result column="Password" property="password" jdbcType="VARCHAR" />
		<result column="Status" property="status" jdbcType="SMALLINT" />
		<result column="Memo" property="memo" jdbcType="VARCHAR" />
	</resultMap>
	<select id="LoginJudgy" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		*
		from user
		where UserName = #{username,jdbcType=VARCHAR} and
		Password=#{password,jdbcType=VARCHAR}
	</select>
	<select id="selectUserInfo" resultType="com.xk.orm.User" parameterType="java.lang.Integer">
		select * from `user` WHERE `user`.UserId=#{userid}
	</select>
	<!-- <select id="selectallUser" resultType="com.xk.orm.UserInfo"> select 
		`user`.*,dicitem.Item as type,unit.UnitName as unitname FROM `user`,dicitem,unit 
		WHERE `user`.UserType=dicitem.DicItemId and `user`.UnitId=unit.UnitId </select> -->
	<select id="selectallUser" resultType="com.xk.orm.UserInfo">
		select
		`user`.*,unit.UnitName as unitname FROM
		`user`,unit WHERE
		`user`.UnitId=unit.UnitId
	</select>
	<select id="AppUserLogin" resultType="com.xk.orm.UserInfo"
		parameterType="java.lang.String">
		SELECT userrole.UserId,`user`.*,unit.UnitName from
		userrole LEFT JOIN `user` ON userrole.UserId=`user`.UserId LEFT JOIN
		unit ON `user`.UnitId=unit.UnitId WHERE userrole.RoleId in (SELECT
		role.RoleId from role WHERE role.`Name`="线路运行单位") AND
		`user`.UserName= #{username,jdbcType=VARCHAR} and `user`.`Password`= #{password,jdbcType=VARCHAR}
	</select>
	<!-- <select id="selectUsertype"> select * from dicitem </select> -->
	<select id="selectUserByInfo" resultType="com.xk.orm.UserInfo"
		parameterType="com.xk.orm.UserInfo">
		select
		`user`.*,dicitem.Item as type,unit.UnitName as
		unitname FROM
		`user`,dicitem,unit WHERE
		`user`.UserType=dicitem.DicItemId and
		`user`.UnitId=unit.UnitId and
		unit.UnitName=#{unitname}
		and `user`.`Name`=#{name} AND dicitem.Item=#{type}
	</select>
	<!-- 根据userid查找user信息 -->
	<select id="SelectUserByUserId" resultType="com.xk.orm.UserInfo"
		parameterType="java.lang.Integer">
		select * from `user` where `user`.UserId=#{userid}
	</select>
	<update id="ModifyUserInfo" parameterType="com.xk.orm.User">
		update user
		<set>
			<if test="unitid != null">
				UnitId = #{unitid,jdbcType=INTEGER}
			</if>
			<if test="name != null">
				,Name = #{name,jdbcType=VARCHAR}
			</if>
			<if test="usertype != null">
				,UserType = #{usertype,jdbcType=INTEGER}
			</if>
			<if test="username != null">
				,UserName = #{username,jdbcType=VARCHAR}
			</if>
			<if test="password != null">
				,Password = #{password,jdbcType=VARCHAR}
			</if>
			<if test="status != null">
				,Status = #{status,jdbcType=SMALLINT}
			</if>
			<if test="memo != null">
				,Memo = #{memo,jdbcType=VARCHAR}
			</if>
		</set>
		where UserId = #{userid,jdbcType=INTEGER}
	</update>
	<delete id="deleteByUserid" parameterType="java.lang.Integer">
		delete from user
		where
		UserId = #{userid,jdbcType=INTEGER}
	</delete>
	<insert id="AddUserInfo" parameterType="com.xk.orm.User">
		insert into user (
		UnitId, Name,
		UserType,Phone, UserName, Password,
		Status, Memo)
		values
		(#{unitid,jdbcType=INTEGER},
		#{name,jdbcType=VARCHAR},
		#{usertype,jdbcType=INTEGER},
		#{phone,jdbcType=INTEGER},
		#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
		#{status,jdbcType=SMALLINT}, #{memo,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.xk.orm.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userid != null">
				UserId,
			</if>
			<if test="unitid != null">
				UnitId,
			</if>
			<if test="name != null">
				Name,
			</if>
			<if test="usertype != null">
				UserType,
			</if>
			<if test="username != null">
				UserName,
			</if>
			<if test="password != null">
				Password,
			</if>
			<if test="status != null">
				Status,
			</if>
			<if test="memo != null">
				Memo,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userid != null">
				#{userid,jdbcType=INTEGER},
			</if>
			<if test="unitid != null">
				#{unitid,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="usertype != null">
				#{usertype,jdbcType=INTEGER},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=SMALLINT},
			</if>
			<if test="memo != null">
				#{memo,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.xk.orm.User">
		update user
		<set>
			<if test="unitid != null">
				UnitId = #{unitid,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				Name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="usertype != null">
				UserType = #{usertype,jdbcType=INTEGER},
			</if>
			<if test="username != null">
				UserName = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				Password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				Status = #{status,jdbcType=SMALLINT},
			</if>
			<if test="memo != null">
				Memo = #{memo,jdbcType=VARCHAR},
			</if>
		</set>
		where UserId = #{userid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.xk.orm.User">
		update user
		set
		UnitId = #{unitid,jdbcType=INTEGER},
		Name = #{name,jdbcType=VARCHAR},
		UserType = #{usertype,jdbcType=INTEGER},
		UserName =
		#{username,jdbcType=VARCHAR},
		Password = #{password,jdbcType=VARCHAR},
		Status = #{status,jdbcType=SMALLINT},
		Memo = #{memo,jdbcType=VARCHAR}
		where UserId = #{userid,jdbcType=INTEGER}
	</update>
</mapper>