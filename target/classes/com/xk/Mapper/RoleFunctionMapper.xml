<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xk.Dao.RoleFunctionMapper">
  <resultMap id="BaseResultMap" type="com.xk.orm.RoleFunction">
    <id column="RoleFunctionId" jdbcType="INTEGER" property="rolefunctionid" />
    <result column="RoleId" jdbcType="INTEGER" property="roleid" />
    <result column="FunctionId" jdbcType="INTEGER" property="functionid" />
    <result column="ParentId" jdbcType="INTEGER" property="parentid" />
  </resultMap>
  <sql id="Base_Column_List">
    RoleFunctionId, RoleId, FunctionId, ParentId
  </sql>
  <insert id="insertFunc" parameterType="com.xk.orm.RoleFunction">
  	insert into rolefunction (RoleId, FunctionId, 
      ParentId)
    values (#{roleid,jdbcType=INTEGER}, #{functionid,jdbcType=INTEGER}, 
      #{parentid,jdbcType=INTEGER})
  </insert>
  <!-- 删除功能 -->
  <delete id="deleteFunc" parameterType="com.xk.orm.RoleFunction" >
    delete from rolefunction
    where RoleId=#{roleid,jdbcType=INTEGER} and  FunctionId=#{functionid,jdbcType=INTEGER} and 
    ParentId=#{parentid,jdbcType=INTEGER}
  </delete>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rolefunction
    where RoleFunctionId = #{rolefunctionid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rolefunction
    where RoleFunctionId = #{rolefunctionid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xk.orm.RoleFunction">
    insert into rolefunction (RoleFunctionId, RoleId, FunctionId, 
      ParentId)
    values (#{rolefunctionid,jdbcType=INTEGER}, #{roleid,jdbcType=INTEGER}, #{functionid,jdbcType=INTEGER}, 
      #{parentid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xk.orm.RoleFunction">
    insert into rolefunction
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rolefunctionid != null">
        RoleFunctionId,
      </if>
      <if test="roleid != null">
        RoleId,
      </if>
      <if test="functionid != null">
        FunctionId,
      </if>
      <if test="parentid != null">
        ParentId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rolefunctionid != null">
        #{rolefunctionid,jdbcType=INTEGER},
      </if>
      <if test="roleid != null">
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="functionid != null">
        #{functionid,jdbcType=INTEGER},
      </if>
      <if test="parentid != null">
        #{parentid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xk.orm.RoleFunction">
    update rolefunction
    <set>
      <if test="roleid != null">
        RoleId = #{roleid,jdbcType=INTEGER},
      </if>
      <if test="functionid != null">
        FunctionId = #{functionid,jdbcType=INTEGER},
      </if>
      <if test="parentid != null">
        ParentId = #{parentid,jdbcType=INTEGER},
      </if>
    </set>
    where RoleFunctionId = #{rolefunctionid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xk.orm.RoleFunction">
    update rolefunction
    set RoleId = #{roleid,jdbcType=INTEGER},
      FunctionId = #{functionid,jdbcType=INTEGER},
      ParentId = #{parentid,jdbcType=INTEGER}
    where RoleFunctionId = #{rolefunctionid,jdbcType=INTEGER}
  </update>
</mapper>